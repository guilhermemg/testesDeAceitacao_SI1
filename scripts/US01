# User Story 01 - Criação de conta

#    O usuário se cadastra no sistema
# e adiciona alguns links a sua lista.
#    Cada link tem uma data de criação pelo
# usuário, ainda que aponte para vídeos com a
# mesma música ou mesmo links com absolute path
# iguais, a data de criação faz deles links distintos.
#    Os links são armazenados na ordem cronológica de criação.


# limpar os dados do sistema
zerarSistema

# entradas válidas

criarUsuario login="mark" senha="m@rk" nome="Mark Zuckerberg" email="mark@facebook.com"
criarUsuario login="steve" senha="5t3v3" nome="Steven Paul Jobs" email="jobs@apple.com"

# o método 'abrirSessao' retorna o ID da sessão
sessaoMark=abrirSessao login="mark" senha="m@rk"
expect "Mark Zuckerberg" getAtributoUsuario login="mark" atributo="nome" 
expect "mark@facebook.com" getAtributoUsuario login="mark" atributo="email"

sessaoSteve=abrirSessao login="steve" senha="5t3v3"
expect "Steven Paul Jobs" getAtributoUsuario login="steve" atributo="nome"
expect "jobs@apple.com" getAtributoUsuario login="steve" atributo="email"

# verifica lista de links
expect {} idSessao=${sessaoMark} getListaLinks
expect {} idSessao=${sessaoSteve} getListaLinks

# Mark adiciona links para musicas
link1ID=adicinarLinkParaMusica idSessao=${sessaoMark} link="http://letras.mus.br/david-guetta/#mais-acessadas/1944260" dataCriacao="23/06/2013"
link2ID=adicinarLinkParaMusica idSessao=${sessaoMark} link="http://letras.mus.br/david-guetta/#mais-acessadas/1944260" dataCriacao="24/06/2013"

expect "23/06/2013" getAtributoLink idLink=$link1ID atributo="dataCriacao"
expect "24/06/2013" getAtributoLink idLink=$link2ID atributo="dataCriacao"

# Steve adiciona links para musicas
link3ID=adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="25/12/2013"
link4ID=adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=JRfuAukYTKg" dataCriacao="23/06/2014"
link5ID=adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=PVzljDmoPVs" dataCriacao="10/04/2015"

expect "25/12/2016" getAtributoLink idLink=$link3ID atributo="dataCriacao"
expect "23/06/2014" getAtributoLink idLink=$link4ID atributo="dataCriacao"
expect "10/04/2013" getAtributoLink idLink=$link5ID atributo="dataCriacao"

expect {${link1ID},${link2ID}} idSessao=${sessaoMark} getListaLinks
expect {${link3ID},${link4ID},${link5ID}} idSessao=${sessaoSteve} getListaLinks

# entradas inválidas

expectError "Login inválido" criarUsuario login= senha="xptz" nome="xpto" email="logininvalido@gmail.com"
expectError "Login inválido" criarUsuario login="" senha="xptz" nome="xpto" email="deuerro@gmail.com"
expectError "Nome inválido" criarUsuario login="xpto" senha="xptz" nome= email="nomeinvalido@hotmail.com"
expectError "Nome inválido" criarUsuario login="xpto" senha="xptz" nome="" email="nomevazio@email.com"
expectError "Email inválido" criarUsuario login="xpto" senha="xptz" nome="patriciano" email=
expectError "Email inválido" criarUsuario login="xpto" senha="xptz" nome="pantcho" email=""
expectError "Já existe um usuário com este email" criarUsuario login="xpto" senha="tttppp" nome="markito" email="mark@facebook.com"
expectError "Já existe um usuário com este login" criarUsuario login="mark" senha="tttppp" nome="xpto" email="markinho@facebook.com"
expectError "Login inválido" abrirSessao login= senha="teste"
expectError "Login inválido" abrirSessao login="" senha="segundoteste"
expectError "Login inválido" abrirSessao login="mark" senha="teste"
expectError "Login inválido" abrirSessao login="mark" senha="segundoteste"
expectError "Usuário inexistente" abrirSessao login="xpto" senha="maisXptoAinda"
expectError "Link inválido" adicionarLinkParaMusica idSessao=${sessaoSteve} link= dataCriacao="99/99/9999"
expectError "Link inválido" adicionarLinkParaMusica idSessao=${sessaoSteve} link="" dataCriacao="99/99/9999"

expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="20/12/2012"
expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="12/30/2012"
expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="32/11/2012"
expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="29/02/2015"
expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="31/04/2015"
expectError "Data de Criação inválida" adicionarLinkParaMusica idSessao=${sessaoSteve} link="http://www.youtube.com/watch?v=3KsPIJK17uk" dataCriacao="30/04/15"

# lista de links de Steve continua intacta
expect {${link3ID},${link4ID},${link5ID}} idSessao=${sessaoSteve} getListaLinks

expectError "Login inválido" getAtributoUsuario login= atributo="nome"
expectError "Login inválido" getAtributoUsuario login="" atributo="nome"
expectError "Usuário inexistente" getAtributoUsuario login="xpto" atributo="nome"
expectError "Atributo inválido" getAtributoUsuario login="mark" atributo=
expectError "Atributo inválido" getAtributoUsuario login="mark" atributo=""
expectError "Atributo inexistente" getAtributoUsuario login="mark" atributo="xpto"

expectError "Link inexistente" getAtributoLink idLink= atributo="xpto"
expectError "Link inválido" getAtributoLink idLink="" atributo="xpto"
expectError "Atributo inválido" getAtributoLink idLink=$idLink1 atributo=
expectError "Atributo inválido" getAtributoLink idLink=$idLink1 atributo=""
expectError "Atributo inexistente" getAtributoLink idLink=$idLink1 atributo="xpto"

#Encerrar a sessao de Mark
encerrarSessao login="mark"

#Encerrar a sessao de Steve
encerrarSessao login="steve"

encerrarSistema
quit
